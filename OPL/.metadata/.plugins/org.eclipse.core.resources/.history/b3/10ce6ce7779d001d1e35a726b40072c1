using CP;

int n;

tuple woman {
    int id;
    {int} preference;
}

tuple man {
    int id;
    {int} preference;
}

{woman} women;
{man} men;

dvar int x[women][men];

subject to {
    forall (w in women, m in men)
        x[w][m] <= 1;
    forall (w in women)
        sum(m in men) x[w][m] == 1;
    forall (m in men)
        sum(w in women) x[w][m] == 1;
    forall (w in women) {
        forall (i in 1..n) {
            forall (j in i+1..n) {
                x[w][preference[w][i-1]] + x[w][preference[w][j-1]] <= 1;
                x[preference[w][i-1]][w] + x[preference[w][j-1]][w] <= 1;
            }
        }
    }
    forall (m in men) {
        forall (i in 1..n) {
            forall (j in i+1..n) {
                x[preference[m][i-1]][m] + x[preference[m][j-1]][m] <= 1;
                x[m][preference[m][i-1]] + x[m][preference[m][j-1]] <= 1;
            }
        }
    }
}

maximize sum(w in women, m in men) x[w][m];

execute {
    writeln("Solution :");
    for (w in women) {
        for (m in men) {
            if (x[w][m].solution() == 1)
                writeln(w.id + " -> " + m.id);
        }
    }
}