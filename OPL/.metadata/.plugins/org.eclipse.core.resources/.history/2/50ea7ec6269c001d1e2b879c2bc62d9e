using CP;

// Nombre de femme et d'homme
int nb_femme = ...;
int nb_homme = ...;

// Range des femmmes et des hommes
range femme = 1..nb_femme;
range homme = 1..nb_homme;

// Nom des femmes et des hommes
string nom_femme[femme] = ...;
string nom_homme[homme] = ...;

// Ranking des hommes par les femmes et des femmes par les hommes
tuple couples{int fe; int ho; int rf; int rh;}
{couples} couple = ...;

// Variable de décision binaire, x[femme][homme] = 1 si la femme est mariée à l'homme, 0 sinon
dvar boolean x[femme][homme];

subject to {
	forall(f in femme) sum(<f, ho, rf, rh> in couple) x[f][ho] == 1;
	forall(h in homme) sum(<fe, h, rf, rh> in couple) x[fe][h] == 1;	

	forall(<fe, ho, rf, rh> in couple){  
	}
		(rank_femme[f][h] > sum(j in homme) (x[f][j] * rank_femme[f][j])) => (rank_homme[h][f] <= sum(i in femme) (x[i][h] * rank_homme[h][i]));
		// Si un homme h préfère une femme f, alors f préfère son époux à h
		(rank_homme[h][f] > sum(i in femme) (x[i][h] * rank_homme[i][h])) => (rank_femme[f][h] <= sum(j in homme) (x[f][j] * rank_femme[f][j]));
	}		

	
}

execute {
  for(var f in femme) {
    for(var h in homme) {
    	if(x[f][h] == 1)
    		writeln(nom_femme[f], " (", f, ") est mariée avec ", nom_homme[h], " (", h, ")");
   		}    	
    }

}

